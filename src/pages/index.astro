---
import Layout from '@/layouts/layout.astro';
import Footer from '@/components/footer.astro';
import Header from '@/components/header.astro';
import { TVLChart } from '@/components/tvl-chart/tvl-chart';
import { ProjectRanking } from '@/components/project-ranking';
import { getAllTVLsWithCache } from '@/server/tvl/tvl-cache';
import { getStakedETH } from '@/server/staked-eth';

const { chartData, combinedTVL, tvls } = await getAllTVLsWithCache();
const data = await getStakedETH();
---

<Layout>
  <div class="flex-grow w-full px-4 py-8 mx-auto max-w-7xl sm:px-6 lg:px-8">
    <div class="max-w-[1070px] mx-auto">
      <Header />
      <div class="my-16 md:mt-24">
        <TVLChart
          client:load
          title={'Staked ETH'}
          description={'Total value of ETH staked on Ethereum 2.0'}
          tvls={[data]}
          defaultValue={data}
        />
      </div>
      <div class="my-16 md:mt-24">
        <TVLChart
          client:load
          title={'Liquid Staking'}
          description={'Total value locked on all listed liquid staking projects'}
          tvls={chartData}
          defaultValue={combinedTVL}
        />
      </div>
      <!-- <div
        class="bg-[#191919] rounded flex items-center justify-between md:h-[140px] flex-wrap md:flex-nowrap border border-white border-opacity-10"
      >
        <div class="flex flex-col items-start justify-center gap-1 p-8 w-full md:w-[25%]">
          <div class="font-mono text-xs font-bold opacity-50">ETH STAKED</div>
          <div class="text-2xl font-semibold">Îž {rocketPoolETHStaked}</div>
        </div>
        <div class="w-[1px] h-[140px] bg-white bg-opacity-10 md:block hidden"></div>
        <div
          class="flex flex-col items-start justify-center gap-1 p-8 w-full md:w-[25%] md:border-t-0 border-t border-white border-opacity-10"
        >
          <div class="font-mono text-xs font-bold opacity-50">VALIDATORS</div>
          <div class="text-2xl font-semibold">???</div>
        </div>
        <div class="w-[1px] h-[140px] bg-white bg-opacity-10 md:block hidden"></div>
        <div
          class="flex flex-col items-start justify-center gap-1 p-8 w-full md:w-[25%] md:border-t-0 border-t border-white border-opacity-10"
        >
          <div class="font-mono text-xs font-bold opacity-50">STAKED SHARE OF ETH</div>
          <div class="text-2xl font-semibold">???</div>
        </div>
        <div class="w-[1px] h-[140px] bg-white bg-opacity-10 md:block hidden"></div>
        <div
          class="flex flex-col items-start justify-center gap-1 p-8 w-full md:w-[25%] md:border-t-0 border-t border-white border-opacity-10"
        >
          <div class="font-mono text-xs font-bold opacity-50">LIDO DOMINANCE</div>
          <div class="text-2xl font-semibold">???</div>
        </div>
      </div> -->
      <div class="mt-32">
        <div class="flex flex-wrap items-center justify-between gap-8">
          <div>
            <h2 class="mb-2 text-2xl font-medium md:text-3xl">Project Rankings</h2>
            <div class="text-lg font-light md:text-xl opacity-70">
              <span class="block"> The top 10 projects by total value locked. </span>
            </div>
          </div>
        </div>
        <div
          class="max-w-[100vw] overflow-x-auto mt-8 mb-16 border border-white border-opacity-10 rounded"
        >
          <ProjectRanking
            projects={[
              {
                label: 'RocketPool',
                values: tvls.rocketPoolTVL
              },
              {
                label: 'EtherFi',
                values: tvls.etherFiTVL
              },
              {
                label: 'StakeWise (v3)',
                values: tvls.stakeWiseTVL
              },
              {
                label: 'Lido',
                values: tvls.lidoTVL
              },
              {
                label: 'Stader',
                values: tvls.staderTVL
              },
              {
                label: 'Mantle',
                values: tvls.mantleTVL
              },
              {
                label: 'Swell',
                values: tvls.swellTVL
              }
            ]}
            client:only="react"
          />
        </div>
      </div>
    </div>
  </div>
  <Footer />
</Layout>
